# -*- coding: utf-8 -*-
"""Interfacing R and Python

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/192TYionx6b7ZadQ3u_GnXQTiMKAa9qcn

Code from PyData Berlin 2018 https://www.youtube.com/watch?v=pjDGB9i7kyI
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install rpy2

import rpy2
print(rpy2.__version__)

import warnings
from rpy2.rinterface import RRuntimeWarning
warnings.filterwarnings("ignore", category=RRuntimeWarning)
warnings.filterwarnings("ignore", category=FutureWarning)

import numpy as np
import pandas as pd
from rpy2.robjects import pandas2ri
import rpy2.robjects as ro
from rpy2.robjects.packages import importr
from rpy2.robjects import pandas2ri

from rpy2.robjects.conversion import localconverter

from sklearn import datasets

from rpy2.robjects import pandas2ri
pandas2ri.activate()

age= np.random.uniform(0,18,size=50)
height=22+8.6*age + np.random.normal(size=50, scale=10)

growing = pd.DataFrame({'age':age,'height':height})
growing.head()

# Commented out IPython magic to ensure Python compatibility.
#Enable R magic 

# %load_ext rpy2.ipython 

# %R line magic (return value as python object) 
# %%R cell magic (no return value but pass info in and out)

# Commented out IPython magic to ensure Python compatibility.
# %R R.version$version.string

# Commented out IPython magic to ensure Python compatibility.
# %R height= rnorm(20,165,10)

# Commented out IPython magic to ensure Python compatibility.
# %R head(mtcars)

# We can store the resuls of R in a python variable 

mtcars = %R mtcars

mtcars

type(mtcars) 
# pandas.core.frame.DataFrame

mtcars.shape

mtcars.isnull().sum()


# Commented out IPython magic to ensure Python compatibility.
# %%R 
# 
# R.version
# 
# #Block magic is more useful for code that has side effects

"""**Application: Simple Regresion**"""

# Commented out IPython magic to ensure Python compatibility.
# %%R -i age,height -o coefficients 
# 
# fit <- lm(height~ age)
# coefficients <- coef(fit)

print(coefficients)

"""This is still an R object. We can convert it explicitly to Python"""

# pandas2ri.ri2py(coefficients)
# but this doesnt work

# Commented out IPython magic to ensure Python compatibility.
# %R summary(fit)

"""Apparently it is not as easy to have diagnostic tools in skitlearn as in R like using the summary function here

**Aplication: plotting**
"""

# Commented out IPython magic to ensure Python compatibility.
# %%R -w 900 -h 450
# par(mfrow= c(1,2),cex=1.25)
# 
# plot(fit,which=1:2)

"""**Application: Synthetic data**"""

# Commented out IPython magic to ensure Python compatibility.
# %%R -o synthetic_people
# library(charlatan)
# 
# synthetic_people <- ch_generate("name","phone_number", "job", locale="fr_FR")

synthetic_people

ro.conversion.py2rpy(synthetic_people)